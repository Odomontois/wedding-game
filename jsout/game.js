// Generated by LiveScript 1.5.0
(function(){
  var Board, sortBy, Game, out$ = typeof exports != 'undefined' && exports || this;
  Board = require('board.ls').Board;
  sortBy = require('prelude-ls').sortBy;
  out$.Game = Game = (function(superclass){
    var prototype = extend$((import$(Game, superclass).displayName = 'Game', Game), superclass).prototype, constructor = Game;
    function Game(stages, cfg){
      var width, height;
      this.stages = stages;
      this.cfg = cfg;
      width = cfg.width, height = cfg.height;
      Game.superclass.call(this, width, height, Phaser.AUTO, '', null);
      this.state.add('Board', Board, false);
      this.state.start('Board');
    }
    return Game;
  }(Phaser.Game));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
